// File: crypto.proto

syntax = "proto2";

message GG {
	required string x = 1;
	required string y = 2;
}

message Com {
	repeated GG element = 1;
}

message Decom {
	message Dpair {
		required string randomness = 1;
		required uint32 msg = 2;
	}
	repeated Dpair dp = 1;
}

message Key {
	required GG pk = 1;
	optional string sk = 2;
	required uint32 curve = 3;
}

message ZK1 {
	repeated GG element = 1;
}

message ZKState {
	repeated string zp = 1;
}

message ZK2 {
	repeated string zp = 1;
}

// -----------------------------------------------------------------------------

message CryptoRequest {
	
	message KeyGenData {
		required uint32 curve = 1;
	}
	
	message GenBallotData {
		required Key key = 1;
		required uint32 options = 2;
		required uint32 blanks = 3;
		required uint32 number = 4;
	}
	
	message AddComData {
		required Key key = 1;
		repeated Com com = 2;
	}
	
	message AddDecomData {
		required Key key = 1;
		repeated Decom decom = 2;
	}
	
	message CompleteZKData {
		
		message ZKSet {
			required ZK1 zk1 = 1;
			required ZKState zk_state = 2;
		}
		
		required Key key = 1;
		required uint32 options = 2;
		required string coins = 3;
		repeated ZKSet zk_set = 4;
	}
	
	message VerifyComData {
		required Key key = 1;
		required Com com = 2;
		required Decom decom = 3;
	}
	
	enum Cmd {
		KeyGen = 0;
		GenBallot = 1;
		AddCom = 2;
		AddDecom = 3;
		CompleteZK = 4;
		VerifyCom = 5;
	}
	
	required Cmd cmd = 1;
	
	optional KeyGenData kg = 2;
	optional GenBallotData gb = 3;
	optional AddComData ac = 4;
	optional AddDecomData ad = 5;
	optional CompleteZKData cz = 6;
	optional VerifyComData vc = 7;
}

message CryptoResponse {
	
	message BallotData {
		
		message Ballot {
			
			message Enc {
				required Com com = 1;
				required Decom decom = 2;
				required ZK1 zk1 = 3;
				required ZKState zk_state = 4;
			}
			repeated Enc opt = 1;
			repeated Enc blank = 2;
		}
		repeated Ballot ballot = 1;
	}
	
	message ZKSet {
		repeated ZK2 zk2 = 1;
	}
	
	optional Key key = 1;
	optional BallotData ballot_data = 2;
	optional Com combined_com = 3;
	optional Decom combined_decom = 4;
	optional ZKSet zk_set = 5;
	optional bool check = 6;
}

