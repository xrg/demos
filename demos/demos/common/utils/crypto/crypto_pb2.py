# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: demos/common/utils/crypto/crypto.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='demos/common/utils/crypto/crypto.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n&demos/common/utils/crypto/crypto.proto\"\x1a\n\x02GG\x12\t\n\x01x\x18\x01 \x02(\t\x12\t\n\x01y\x18\x02 \x02(\x08\"\'\n\x03\x43om\x12\x0f\n\x02\x63\x31\x18\x01 \x02(\x0b\x32\x03.GG\x12\x0f\n\x02\x63\x32\x18\x02 \x02(\x0b\x32\x03.GG\"(\n\x05\x44\x65\x63om\x12\x12\n\nrandomness\x18\x01 \x02(\t\x12\x0b\n\x03msg\x18\x02 \x02(\t\"1\n\x03Key\x12\x0f\n\x02pk\x18\x01 \x02(\x0b\x32\x03.GG\x12\n\n\x02sk\x18\x02 \x01(\t\x12\r\n\x05\x63urve\x18\x03 \x02(\r\"\x1b\n\x03ZK1\x12\x14\n\x07\x65lement\x18\x01 \x03(\x0b\x32\x03.GG\"\x15\n\x07ZKState\x12\n\n\x02zp\x18\x01 \x03(\t\"\x11\n\x03ZK2\x12\n\n\x02zp\x18\x01 \x03(\t\"\x91\x06\n\rCryptoRequest\x12\'\n\x02kg\x18\x01 \x01(\x0b\x32\x19.CryptoRequest.KeyGenDataH\x00\x12*\n\x02gb\x18\x02 \x01(\x0b\x32\x1c.CryptoRequest.GenBallotDataH\x00\x12\'\n\x02\x61\x63\x18\x03 \x01(\x0b\x32\x19.CryptoRequest.AddComDataH\x00\x12)\n\x02\x61\x64\x18\x04 \x01(\x0b\x32\x1b.CryptoRequest.AddDecomDataH\x00\x12+\n\x02\x63z\x18\x05 \x01(\x0b\x32\x1d.CryptoRequest.CompleteZKDataH\x00\x12*\n\x02vc\x18\x06 \x01(\x0b\x32\x1c.CryptoRequest.VerifyComDataH\x00\x1a.\n\nKeyGenData\x12\x0f\n\x07\x62\x61llots\x18\x01 \x02(\r\x12\x0f\n\x07options\x18\x02 \x02(\r\x1aT\n\rGenBallotData\x12\x11\n\x03key\x18\x01 \x02(\x0b\x32\x04.Key\x12\x0f\n\x07\x62\x61llots\x18\x02 \x02(\r\x12\x0f\n\x07options\x18\x03 \x02(\r\x12\x0e\n\x06number\x18\x04 \x02(\r\x1a\x32\n\nAddComData\x12\x11\n\x03key\x18\x01 \x02(\x0b\x32\x04.Key\x12\x11\n\x03\x63om\x18\x02 \x03(\x0b\x32\x04.Com\x1a\x38\n\x0c\x41\x64\x64\x44\x65\x63omData\x12\x11\n\x03key\x18\x01 \x02(\x0b\x32\x04.Key\x12\x15\n\x05\x64\x65\x63om\x18\x02 \x03(\x0b\x32\x06.Decom\x1a\xb0\x01\n\x0e\x43ompleteZKData\x12\x11\n\x03key\x18\x01 \x02(\x0b\x32\x04.Key\x12\x0f\n\x07options\x18\x02 \x02(\r\x12\r\n\x05\x63oins\x18\x03 \x02(\t\x12\x33\n\x06zk_set\x18\x04 \x03(\x0b\x32#.CryptoRequest.CompleteZKData.ZKSet\x1a\x36\n\x05ZKSet\x12\x11\n\x03zk1\x18\x01 \x02(\x0b\x32\x04.ZK1\x12\x1a\n\x08zk_state\x18\x02 \x02(\x0b\x32\x08.ZKState\x1aL\n\rVerifyComData\x12\x11\n\x03key\x18\x01 \x02(\x0b\x32\x04.Key\x12\x11\n\x03\x63om\x18\x02 \x02(\x0b\x32\x04.Com\x12\x15\n\x05\x64\x65\x63om\x18\x03 \x02(\x0b\x32\x06.DecomB\t\n\x07request\"\xd5\x03\n\x0e\x43ryptoResponse\x12\x13\n\x03key\x18\x01 \x01(\x0b\x32\x04.KeyH\x00\x12\x31\n\x0b\x62\x61llot_data\x18\x02 \x01(\x0b\x32\x1a.CryptoResponse.BallotDataH\x00\x12\x19\n\tadded_com\x18\x03 \x01(\x0b\x32\x04.ComH\x00\x12\x1d\n\x0b\x61\x64\x64\x65\x64_decom\x18\x04 \x01(\x0b\x32\x06.DecomH\x00\x12\x0f\n\x05\x63heck\x18\x05 \x01(\x08H\x00\x12\'\n\x06zk_set\x18\x06 \x01(\x0b\x32\x15.CryptoResponse.ZKSetH\x00\x1a\xde\x01\n\nBallotData\x12\x31\n\x06\x62\x61llot\x18\x01 \x03(\x0b\x32!.CryptoResponse.BallotData.Ballot\x1a\x9c\x01\n\x06\x42\x61llot\x12\x32\n\x03\x65nc\x18\x01 \x03(\x0b\x32%.CryptoResponse.BallotData.Ballot.Enc\x1a^\n\x03\x45nc\x12\x11\n\x03\x63om\x18\x01 \x02(\x0b\x32\x04.Com\x12\x15\n\x05\x64\x65\x63om\x18\x02 \x02(\x0b\x32\x06.Decom\x12\x11\n\x03zk1\x18\x03 \x02(\x0b\x32\x04.ZK1\x12\x1a\n\x08zk_state\x18\x04 \x02(\x0b\x32\x08.ZKState\x1a\x1a\n\x05ZKSet\x12\x11\n\x03zk2\x18\x01 \x03(\x0b\x32\x04.ZK2B\n\n\x08response')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_GG = _descriptor.Descriptor(
  name='GG',
  full_name='GG',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='GG.x', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='y', full_name='GG.y', index=1,
      number=2, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=42,
  serialized_end=68,
)


_COM = _descriptor.Descriptor(
  name='Com',
  full_name='Com',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='c1', full_name='Com.c1', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='c2', full_name='Com.c2', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=70,
  serialized_end=109,
)


_DECOM = _descriptor.Descriptor(
  name='Decom',
  full_name='Decom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='randomness', full_name='Decom.randomness', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='msg', full_name='Decom.msg', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=111,
  serialized_end=151,
)


_KEY = _descriptor.Descriptor(
  name='Key',
  full_name='Key',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pk', full_name='Key.pk', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sk', full_name='Key.sk', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='curve', full_name='Key.curve', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=153,
  serialized_end=202,
)


_ZK1 = _descriptor.Descriptor(
  name='ZK1',
  full_name='ZK1',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='element', full_name='ZK1.element', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=204,
  serialized_end=231,
)


_ZKSTATE = _descriptor.Descriptor(
  name='ZKState',
  full_name='ZKState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='zp', full_name='ZKState.zp', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=233,
  serialized_end=254,
)


_ZK2 = _descriptor.Descriptor(
  name='ZK2',
  full_name='ZK2',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='zp', full_name='ZK2.zp', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=256,
  serialized_end=273,
)


_CRYPTOREQUEST_KEYGENDATA = _descriptor.Descriptor(
  name='KeyGenData',
  full_name='CryptoRequest.KeyGenData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ballots', full_name='CryptoRequest.KeyGenData.ballots', index=0,
      number=1, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='options', full_name='CryptoRequest.KeyGenData.options', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=551,
  serialized_end=597,
)

_CRYPTOREQUEST_GENBALLOTDATA = _descriptor.Descriptor(
  name='GenBallotData',
  full_name='CryptoRequest.GenBallotData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='CryptoRequest.GenBallotData.key', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ballots', full_name='CryptoRequest.GenBallotData.ballots', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='options', full_name='CryptoRequest.GenBallotData.options', index=2,
      number=3, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='number', full_name='CryptoRequest.GenBallotData.number', index=3,
      number=4, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=599,
  serialized_end=683,
)

_CRYPTOREQUEST_ADDCOMDATA = _descriptor.Descriptor(
  name='AddComData',
  full_name='CryptoRequest.AddComData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='CryptoRequest.AddComData.key', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='com', full_name='CryptoRequest.AddComData.com', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=685,
  serialized_end=735,
)

_CRYPTOREQUEST_ADDDECOMDATA = _descriptor.Descriptor(
  name='AddDecomData',
  full_name='CryptoRequest.AddDecomData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='CryptoRequest.AddDecomData.key', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='decom', full_name='CryptoRequest.AddDecomData.decom', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=737,
  serialized_end=793,
)

_CRYPTOREQUEST_COMPLETEZKDATA_ZKSET = _descriptor.Descriptor(
  name='ZKSet',
  full_name='CryptoRequest.CompleteZKData.ZKSet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='zk1', full_name='CryptoRequest.CompleteZKData.ZKSet.zk1', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zk_state', full_name='CryptoRequest.CompleteZKData.ZKSet.zk_state', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=918,
  serialized_end=972,
)

_CRYPTOREQUEST_COMPLETEZKDATA = _descriptor.Descriptor(
  name='CompleteZKData',
  full_name='CryptoRequest.CompleteZKData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='CryptoRequest.CompleteZKData.key', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='options', full_name='CryptoRequest.CompleteZKData.options', index=1,
      number=2, type=13, cpp_type=3, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='coins', full_name='CryptoRequest.CompleteZKData.coins', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zk_set', full_name='CryptoRequest.CompleteZKData.zk_set', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CRYPTOREQUEST_COMPLETEZKDATA_ZKSET, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=796,
  serialized_end=972,
)

_CRYPTOREQUEST_VERIFYCOMDATA = _descriptor.Descriptor(
  name='VerifyComData',
  full_name='CryptoRequest.VerifyComData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='CryptoRequest.VerifyComData.key', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='com', full_name='CryptoRequest.VerifyComData.com', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='decom', full_name='CryptoRequest.VerifyComData.decom', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=974,
  serialized_end=1050,
)

_CRYPTOREQUEST = _descriptor.Descriptor(
  name='CryptoRequest',
  full_name='CryptoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='kg', full_name='CryptoRequest.kg', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gb', full_name='CryptoRequest.gb', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ac', full_name='CryptoRequest.ac', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ad', full_name='CryptoRequest.ad', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cz', full_name='CryptoRequest.cz', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vc', full_name='CryptoRequest.vc', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CRYPTOREQUEST_KEYGENDATA, _CRYPTOREQUEST_GENBALLOTDATA, _CRYPTOREQUEST_ADDCOMDATA, _CRYPTOREQUEST_ADDDECOMDATA, _CRYPTOREQUEST_COMPLETEZKDATA, _CRYPTOREQUEST_VERIFYCOMDATA, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='request', full_name='CryptoRequest.request',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=276,
  serialized_end=1061,
)


_CRYPTORESPONSE_BALLOTDATA_BALLOT_ENC = _descriptor.Descriptor(
  name='Enc',
  full_name='CryptoResponse.BallotData.Ballot.Enc',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='com', full_name='CryptoResponse.BallotData.Ballot.Enc.com', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='decom', full_name='CryptoResponse.BallotData.Ballot.Enc.decom', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zk1', full_name='CryptoResponse.BallotData.Ballot.Enc.zk1', index=2,
      number=3, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zk_state', full_name='CryptoResponse.BallotData.Ballot.Enc.zk_state', index=3,
      number=4, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1399,
  serialized_end=1493,
)

_CRYPTORESPONSE_BALLOTDATA_BALLOT = _descriptor.Descriptor(
  name='Ballot',
  full_name='CryptoResponse.BallotData.Ballot',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enc', full_name='CryptoResponse.BallotData.Ballot.enc', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CRYPTORESPONSE_BALLOTDATA_BALLOT_ENC, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1337,
  serialized_end=1493,
)

_CRYPTORESPONSE_BALLOTDATA = _descriptor.Descriptor(
  name='BallotData',
  full_name='CryptoResponse.BallotData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ballot', full_name='CryptoResponse.BallotData.ballot', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CRYPTORESPONSE_BALLOTDATA_BALLOT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1271,
  serialized_end=1493,
)

_CRYPTORESPONSE_ZKSET = _descriptor.Descriptor(
  name='ZKSet',
  full_name='CryptoResponse.ZKSet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='zk2', full_name='CryptoResponse.ZKSet.zk2', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1495,
  serialized_end=1521,
)

_CRYPTORESPONSE = _descriptor.Descriptor(
  name='CryptoResponse',
  full_name='CryptoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='CryptoResponse.key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ballot_data', full_name='CryptoResponse.ballot_data', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='added_com', full_name='CryptoResponse.added_com', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='added_decom', full_name='CryptoResponse.added_decom', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='check', full_name='CryptoResponse.check', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='zk_set', full_name='CryptoResponse.zk_set', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CRYPTORESPONSE_BALLOTDATA, _CRYPTORESPONSE_ZKSET, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='response', full_name='CryptoResponse.response',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1064,
  serialized_end=1533,
)

_COM.fields_by_name['c1'].message_type = _GG
_COM.fields_by_name['c2'].message_type = _GG
_KEY.fields_by_name['pk'].message_type = _GG
_ZK1.fields_by_name['element'].message_type = _GG
_CRYPTOREQUEST_KEYGENDATA.containing_type = _CRYPTOREQUEST
_CRYPTOREQUEST_GENBALLOTDATA.fields_by_name['key'].message_type = _KEY
_CRYPTOREQUEST_GENBALLOTDATA.containing_type = _CRYPTOREQUEST
_CRYPTOREQUEST_ADDCOMDATA.fields_by_name['key'].message_type = _KEY
_CRYPTOREQUEST_ADDCOMDATA.fields_by_name['com'].message_type = _COM
_CRYPTOREQUEST_ADDCOMDATA.containing_type = _CRYPTOREQUEST
_CRYPTOREQUEST_ADDDECOMDATA.fields_by_name['key'].message_type = _KEY
_CRYPTOREQUEST_ADDDECOMDATA.fields_by_name['decom'].message_type = _DECOM
_CRYPTOREQUEST_ADDDECOMDATA.containing_type = _CRYPTOREQUEST
_CRYPTOREQUEST_COMPLETEZKDATA_ZKSET.fields_by_name['zk1'].message_type = _ZK1
_CRYPTOREQUEST_COMPLETEZKDATA_ZKSET.fields_by_name['zk_state'].message_type = _ZKSTATE
_CRYPTOREQUEST_COMPLETEZKDATA_ZKSET.containing_type = _CRYPTOREQUEST_COMPLETEZKDATA
_CRYPTOREQUEST_COMPLETEZKDATA.fields_by_name['key'].message_type = _KEY
_CRYPTOREQUEST_COMPLETEZKDATA.fields_by_name['zk_set'].message_type = _CRYPTOREQUEST_COMPLETEZKDATA_ZKSET
_CRYPTOREQUEST_COMPLETEZKDATA.containing_type = _CRYPTOREQUEST
_CRYPTOREQUEST_VERIFYCOMDATA.fields_by_name['key'].message_type = _KEY
_CRYPTOREQUEST_VERIFYCOMDATA.fields_by_name['com'].message_type = _COM
_CRYPTOREQUEST_VERIFYCOMDATA.fields_by_name['decom'].message_type = _DECOM
_CRYPTOREQUEST_VERIFYCOMDATA.containing_type = _CRYPTOREQUEST
_CRYPTOREQUEST.fields_by_name['kg'].message_type = _CRYPTOREQUEST_KEYGENDATA
_CRYPTOREQUEST.fields_by_name['gb'].message_type = _CRYPTOREQUEST_GENBALLOTDATA
_CRYPTOREQUEST.fields_by_name['ac'].message_type = _CRYPTOREQUEST_ADDCOMDATA
_CRYPTOREQUEST.fields_by_name['ad'].message_type = _CRYPTOREQUEST_ADDDECOMDATA
_CRYPTOREQUEST.fields_by_name['cz'].message_type = _CRYPTOREQUEST_COMPLETEZKDATA
_CRYPTOREQUEST.fields_by_name['vc'].message_type = _CRYPTOREQUEST_VERIFYCOMDATA
_CRYPTOREQUEST.oneofs_by_name['request'].fields.append(
  _CRYPTOREQUEST.fields_by_name['kg'])
_CRYPTOREQUEST.fields_by_name['kg'].containing_oneof = _CRYPTOREQUEST.oneofs_by_name['request']
_CRYPTOREQUEST.oneofs_by_name['request'].fields.append(
  _CRYPTOREQUEST.fields_by_name['gb'])
_CRYPTOREQUEST.fields_by_name['gb'].containing_oneof = _CRYPTOREQUEST.oneofs_by_name['request']
_CRYPTOREQUEST.oneofs_by_name['request'].fields.append(
  _CRYPTOREQUEST.fields_by_name['ac'])
_CRYPTOREQUEST.fields_by_name['ac'].containing_oneof = _CRYPTOREQUEST.oneofs_by_name['request']
_CRYPTOREQUEST.oneofs_by_name['request'].fields.append(
  _CRYPTOREQUEST.fields_by_name['ad'])
_CRYPTOREQUEST.fields_by_name['ad'].containing_oneof = _CRYPTOREQUEST.oneofs_by_name['request']
_CRYPTOREQUEST.oneofs_by_name['request'].fields.append(
  _CRYPTOREQUEST.fields_by_name['cz'])
_CRYPTOREQUEST.fields_by_name['cz'].containing_oneof = _CRYPTOREQUEST.oneofs_by_name['request']
_CRYPTOREQUEST.oneofs_by_name['request'].fields.append(
  _CRYPTOREQUEST.fields_by_name['vc'])
_CRYPTOREQUEST.fields_by_name['vc'].containing_oneof = _CRYPTOREQUEST.oneofs_by_name['request']
_CRYPTORESPONSE_BALLOTDATA_BALLOT_ENC.fields_by_name['com'].message_type = _COM
_CRYPTORESPONSE_BALLOTDATA_BALLOT_ENC.fields_by_name['decom'].message_type = _DECOM
_CRYPTORESPONSE_BALLOTDATA_BALLOT_ENC.fields_by_name['zk1'].message_type = _ZK1
_CRYPTORESPONSE_BALLOTDATA_BALLOT_ENC.fields_by_name['zk_state'].message_type = _ZKSTATE
_CRYPTORESPONSE_BALLOTDATA_BALLOT_ENC.containing_type = _CRYPTORESPONSE_BALLOTDATA_BALLOT
_CRYPTORESPONSE_BALLOTDATA_BALLOT.fields_by_name['enc'].message_type = _CRYPTORESPONSE_BALLOTDATA_BALLOT_ENC
_CRYPTORESPONSE_BALLOTDATA_BALLOT.containing_type = _CRYPTORESPONSE_BALLOTDATA
_CRYPTORESPONSE_BALLOTDATA.fields_by_name['ballot'].message_type = _CRYPTORESPONSE_BALLOTDATA_BALLOT
_CRYPTORESPONSE_BALLOTDATA.containing_type = _CRYPTORESPONSE
_CRYPTORESPONSE_ZKSET.fields_by_name['zk2'].message_type = _ZK2
_CRYPTORESPONSE_ZKSET.containing_type = _CRYPTORESPONSE
_CRYPTORESPONSE.fields_by_name['key'].message_type = _KEY
_CRYPTORESPONSE.fields_by_name['ballot_data'].message_type = _CRYPTORESPONSE_BALLOTDATA
_CRYPTORESPONSE.fields_by_name['added_com'].message_type = _COM
_CRYPTORESPONSE.fields_by_name['added_decom'].message_type = _DECOM
_CRYPTORESPONSE.fields_by_name['zk_set'].message_type = _CRYPTORESPONSE_ZKSET
_CRYPTORESPONSE.oneofs_by_name['response'].fields.append(
  _CRYPTORESPONSE.fields_by_name['key'])
_CRYPTORESPONSE.fields_by_name['key'].containing_oneof = _CRYPTORESPONSE.oneofs_by_name['response']
_CRYPTORESPONSE.oneofs_by_name['response'].fields.append(
  _CRYPTORESPONSE.fields_by_name['ballot_data'])
_CRYPTORESPONSE.fields_by_name['ballot_data'].containing_oneof = _CRYPTORESPONSE.oneofs_by_name['response']
_CRYPTORESPONSE.oneofs_by_name['response'].fields.append(
  _CRYPTORESPONSE.fields_by_name['added_com'])
_CRYPTORESPONSE.fields_by_name['added_com'].containing_oneof = _CRYPTORESPONSE.oneofs_by_name['response']
_CRYPTORESPONSE.oneofs_by_name['response'].fields.append(
  _CRYPTORESPONSE.fields_by_name['added_decom'])
_CRYPTORESPONSE.fields_by_name['added_decom'].containing_oneof = _CRYPTORESPONSE.oneofs_by_name['response']
_CRYPTORESPONSE.oneofs_by_name['response'].fields.append(
  _CRYPTORESPONSE.fields_by_name['check'])
_CRYPTORESPONSE.fields_by_name['check'].containing_oneof = _CRYPTORESPONSE.oneofs_by_name['response']
_CRYPTORESPONSE.oneofs_by_name['response'].fields.append(
  _CRYPTORESPONSE.fields_by_name['zk_set'])
_CRYPTORESPONSE.fields_by_name['zk_set'].containing_oneof = _CRYPTORESPONSE.oneofs_by_name['response']
DESCRIPTOR.message_types_by_name['GG'] = _GG
DESCRIPTOR.message_types_by_name['Com'] = _COM
DESCRIPTOR.message_types_by_name['Decom'] = _DECOM
DESCRIPTOR.message_types_by_name['Key'] = _KEY
DESCRIPTOR.message_types_by_name['ZK1'] = _ZK1
DESCRIPTOR.message_types_by_name['ZKState'] = _ZKSTATE
DESCRIPTOR.message_types_by_name['ZK2'] = _ZK2
DESCRIPTOR.message_types_by_name['CryptoRequest'] = _CRYPTOREQUEST
DESCRIPTOR.message_types_by_name['CryptoResponse'] = _CRYPTORESPONSE

GG = _reflection.GeneratedProtocolMessageType('GG', (_message.Message,), dict(
  DESCRIPTOR = _GG,
  __module__ = 'demos.common.utils.crypto.crypto_pb2'
  # @@protoc_insertion_point(class_scope:GG)
  ))
_sym_db.RegisterMessage(GG)

Com = _reflection.GeneratedProtocolMessageType('Com', (_message.Message,), dict(
  DESCRIPTOR = _COM,
  __module__ = 'demos.common.utils.crypto.crypto_pb2'
  # @@protoc_insertion_point(class_scope:Com)
  ))
_sym_db.RegisterMessage(Com)

Decom = _reflection.GeneratedProtocolMessageType('Decom', (_message.Message,), dict(
  DESCRIPTOR = _DECOM,
  __module__ = 'demos.common.utils.crypto.crypto_pb2'
  # @@protoc_insertion_point(class_scope:Decom)
  ))
_sym_db.RegisterMessage(Decom)

Key = _reflection.GeneratedProtocolMessageType('Key', (_message.Message,), dict(
  DESCRIPTOR = _KEY,
  __module__ = 'demos.common.utils.crypto.crypto_pb2'
  # @@protoc_insertion_point(class_scope:Key)
  ))
_sym_db.RegisterMessage(Key)

ZK1 = _reflection.GeneratedProtocolMessageType('ZK1', (_message.Message,), dict(
  DESCRIPTOR = _ZK1,
  __module__ = 'demos.common.utils.crypto.crypto_pb2'
  # @@protoc_insertion_point(class_scope:ZK1)
  ))
_sym_db.RegisterMessage(ZK1)

ZKState = _reflection.GeneratedProtocolMessageType('ZKState', (_message.Message,), dict(
  DESCRIPTOR = _ZKSTATE,
  __module__ = 'demos.common.utils.crypto.crypto_pb2'
  # @@protoc_insertion_point(class_scope:ZKState)
  ))
_sym_db.RegisterMessage(ZKState)

ZK2 = _reflection.GeneratedProtocolMessageType('ZK2', (_message.Message,), dict(
  DESCRIPTOR = _ZK2,
  __module__ = 'demos.common.utils.crypto.crypto_pb2'
  # @@protoc_insertion_point(class_scope:ZK2)
  ))
_sym_db.RegisterMessage(ZK2)

CryptoRequest = _reflection.GeneratedProtocolMessageType('CryptoRequest', (_message.Message,), dict(

  KeyGenData = _reflection.GeneratedProtocolMessageType('KeyGenData', (_message.Message,), dict(
    DESCRIPTOR = _CRYPTOREQUEST_KEYGENDATA,
    __module__ = 'demos.common.utils.crypto.crypto_pb2'
    # @@protoc_insertion_point(class_scope:CryptoRequest.KeyGenData)
    ))
  ,

  GenBallotData = _reflection.GeneratedProtocolMessageType('GenBallotData', (_message.Message,), dict(
    DESCRIPTOR = _CRYPTOREQUEST_GENBALLOTDATA,
    __module__ = 'demos.common.utils.crypto.crypto_pb2'
    # @@protoc_insertion_point(class_scope:CryptoRequest.GenBallotData)
    ))
  ,

  AddComData = _reflection.GeneratedProtocolMessageType('AddComData', (_message.Message,), dict(
    DESCRIPTOR = _CRYPTOREQUEST_ADDCOMDATA,
    __module__ = 'demos.common.utils.crypto.crypto_pb2'
    # @@protoc_insertion_point(class_scope:CryptoRequest.AddComData)
    ))
  ,

  AddDecomData = _reflection.GeneratedProtocolMessageType('AddDecomData', (_message.Message,), dict(
    DESCRIPTOR = _CRYPTOREQUEST_ADDDECOMDATA,
    __module__ = 'demos.common.utils.crypto.crypto_pb2'
    # @@protoc_insertion_point(class_scope:CryptoRequest.AddDecomData)
    ))
  ,

  CompleteZKData = _reflection.GeneratedProtocolMessageType('CompleteZKData', (_message.Message,), dict(

    ZKSet = _reflection.GeneratedProtocolMessageType('ZKSet', (_message.Message,), dict(
      DESCRIPTOR = _CRYPTOREQUEST_COMPLETEZKDATA_ZKSET,
      __module__ = 'demos.common.utils.crypto.crypto_pb2'
      # @@protoc_insertion_point(class_scope:CryptoRequest.CompleteZKData.ZKSet)
      ))
    ,
    DESCRIPTOR = _CRYPTOREQUEST_COMPLETEZKDATA,
    __module__ = 'demos.common.utils.crypto.crypto_pb2'
    # @@protoc_insertion_point(class_scope:CryptoRequest.CompleteZKData)
    ))
  ,

  VerifyComData = _reflection.GeneratedProtocolMessageType('VerifyComData', (_message.Message,), dict(
    DESCRIPTOR = _CRYPTOREQUEST_VERIFYCOMDATA,
    __module__ = 'demos.common.utils.crypto.crypto_pb2'
    # @@protoc_insertion_point(class_scope:CryptoRequest.VerifyComData)
    ))
  ,
  DESCRIPTOR = _CRYPTOREQUEST,
  __module__ = 'demos.common.utils.crypto.crypto_pb2'
  # @@protoc_insertion_point(class_scope:CryptoRequest)
  ))
_sym_db.RegisterMessage(CryptoRequest)
_sym_db.RegisterMessage(CryptoRequest.KeyGenData)
_sym_db.RegisterMessage(CryptoRequest.GenBallotData)
_sym_db.RegisterMessage(CryptoRequest.AddComData)
_sym_db.RegisterMessage(CryptoRequest.AddDecomData)
_sym_db.RegisterMessage(CryptoRequest.CompleteZKData)
_sym_db.RegisterMessage(CryptoRequest.CompleteZKData.ZKSet)
_sym_db.RegisterMessage(CryptoRequest.VerifyComData)

CryptoResponse = _reflection.GeneratedProtocolMessageType('CryptoResponse', (_message.Message,), dict(

  BallotData = _reflection.GeneratedProtocolMessageType('BallotData', (_message.Message,), dict(

    Ballot = _reflection.GeneratedProtocolMessageType('Ballot', (_message.Message,), dict(

      Enc = _reflection.GeneratedProtocolMessageType('Enc', (_message.Message,), dict(
        DESCRIPTOR = _CRYPTORESPONSE_BALLOTDATA_BALLOT_ENC,
        __module__ = 'demos.common.utils.crypto.crypto_pb2'
        # @@protoc_insertion_point(class_scope:CryptoResponse.BallotData.Ballot.Enc)
        ))
      ,
      DESCRIPTOR = _CRYPTORESPONSE_BALLOTDATA_BALLOT,
      __module__ = 'demos.common.utils.crypto.crypto_pb2'
      # @@protoc_insertion_point(class_scope:CryptoResponse.BallotData.Ballot)
      ))
    ,
    DESCRIPTOR = _CRYPTORESPONSE_BALLOTDATA,
    __module__ = 'demos.common.utils.crypto.crypto_pb2'
    # @@protoc_insertion_point(class_scope:CryptoResponse.BallotData)
    ))
  ,

  ZKSet = _reflection.GeneratedProtocolMessageType('ZKSet', (_message.Message,), dict(
    DESCRIPTOR = _CRYPTORESPONSE_ZKSET,
    __module__ = 'demos.common.utils.crypto.crypto_pb2'
    # @@protoc_insertion_point(class_scope:CryptoResponse.ZKSet)
    ))
  ,
  DESCRIPTOR = _CRYPTORESPONSE,
  __module__ = 'demos.common.utils.crypto.crypto_pb2'
  # @@protoc_insertion_point(class_scope:CryptoResponse)
  ))
_sym_db.RegisterMessage(CryptoResponse)
_sym_db.RegisterMessage(CryptoResponse.BallotData)
_sym_db.RegisterMessage(CryptoResponse.BallotData.Ballot)
_sym_db.RegisterMessage(CryptoResponse.BallotData.Ballot.Enc)
_sym_db.RegisterMessage(CryptoResponse.ZKSet)


# @@protoc_insertion_point(module_scope)
